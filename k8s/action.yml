name: 'Chkk Kubernetes Manifests'
description: 'Check your Kubernetes manifests for reliability risks'
inputs:
  kubernetes-manifest:
    description: 'Kubernetes manifest to check'
    required: false
  kubernetes-directory:
    description: 'Directory of Kubernetes manifests to check'
    required: false
  helm-chart:
    description: 'Helm chart to run againts'
    required: false
  chart-parameters:
    description: 'Chart parameters to pass to helm template engine'
    required: false
  suppressions:
    description: 'List of checks to suppress'
    required: false
    default: "default"
  checks:
    description: 'List of checks to run'
    required: false
    default: "default"
  standalone-mode:
    description: 'Use Chkk Standalone Mode'
    required: false
    default: "false"
  args:
    description: 'Additional arguments to pass to Chkk'
    required: false

runs:
  using: "composite"
  steps:
    - run: VERSION=$(curl -sS https://get.chkk.dev/cli/latest.txt) && curl -Lo chkk https://get.chkk.dev/${VERSION}/chkk-linux-amd64
      shell: sh
    - run: chmod +x chkk
      shell: sh
    - run: if [ ${{ inputs.standalone-mode }} = true ]; then ./chkk standalone install; fi
      shell: sh
    - run: >
        if [ ${{ inputs.helm-chart }} != "" ]; then
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 &&
        chmod 700 get_helm.sh &&
        ./get_helm.sh &&
        helm template ${{ inputs.helm-chart }} ${{ inputs.chart-parameters }} | ./chkk -f - -s ${{ inputs.suppressions }} -c ${{ inputs.checks }} ${{ inputs.args }}; fi
      shell: sh
    - run: if [ ${{ inputs.kubernetes-manifest }} != "" ]; then ./chkk -f ${{ inputs.kubernetes-manifest }} -s ${{ inputs.suppressions }} -c ${{ inputs.checks }} ${{ inputs.args }}; fi
      shell: sh
    - run: if [ ${{ inputs.kubernetes-directory }} != "" ]; then ./chkk -d ${{ inputs.kubernetes-directory }} -s ${{ inputs.suppressions }} -c ${{ inputs.checks }} ${{ inputs.args }}; fi
      shell: sh